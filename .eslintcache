[{"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\App.tsx":"1","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\hooks\\toast.tsx":"2","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\services\\api.ts":"3","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Dashboard\\index.tsx":"4","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignIn\\styles.ts":"5","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\utils\\getValidationErrors.ts":"6","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\index.tsx":"7","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Button\\index.tsx":"8","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Button\\styles.ts":"9","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\Toast\\styles.ts":"10","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Tooltip\\styles.ts":"11","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\styles\\global.ts":"12","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Input\\styles.ts":"13","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Tooltip\\index.tsx":"14","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Input\\index.tsx":"15","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\styles.ts":"16","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\Toast\\index.tsx":"17","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignIn\\index.tsx":"18","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\hooks\\index.tsx":"19","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\hooks\\auth.tsx":"20","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignUp\\styles.ts":"21","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\index.tsx":"22","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\routes\\index.tsx":"23","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\routes\\routes.tsx":"24","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\ForgotPassword\\styles.ts":"25","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\ForgotPassword\\index.tsx":"26","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\ResetPassword\\index.tsx":"27","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Dashboard\\styles.ts":"28","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignUp\\index.tsx":"29","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Profile\\index.tsx":"30","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Profile\\styles.ts":"31"},{"size":381,"mtime":1609614756825,"results":"32","hashOfConfig":"33"},{"size":1410,"mtime":1609609369641,"results":"34","hashOfConfig":"35"},{"size":117,"mtime":1609447657161,"results":"36","hashOfConfig":"33"},{"size":7253,"mtime":1610475643805,"results":"37","hashOfConfig":"35"},{"size":1552,"mtime":1609615537945,"results":"38","hashOfConfig":"39"},{"size":350,"mtime":1609437605434,"results":"40","hashOfConfig":"35"},{"size":782,"mtime":1609613486236,"results":"41","hashOfConfig":"35"},{"size":402,"mtime":1610415105247,"results":"42","hashOfConfig":"35"},{"size":381,"mtime":1609431930770,"results":"43","hashOfConfig":"39"},{"size":1232,"mtime":1610415359756,"results":"44","hashOfConfig":"45"},{"size":762,"mtime":1609442188587,"results":"46","hashOfConfig":"35"},{"size":462,"mtime":1609427760688,"results":"47","hashOfConfig":"35"},{"size":1104,"mtime":1609442069251,"results":"48","hashOfConfig":"35"},{"size":355,"mtime":1609441608702,"results":"49","hashOfConfig":"50"},{"size":1747,"mtime":1610469611409,"results":"51","hashOfConfig":"52"},{"size":162,"mtime":1609609710493,"results":"53","hashOfConfig":"33"},{"size":1187,"mtime":1610415367103,"results":"54","hashOfConfig":"35"},{"size":2735,"mtime":1610413317933,"results":"55","hashOfConfig":"56"},{"size":294,"mtime":1610408558158,"results":"57","hashOfConfig":"56"},{"size":2177,"mtime":1610472522389,"results":"58","hashOfConfig":"59"},{"size":1554,"mtime":1609616019757,"results":"60","hashOfConfig":"56"},{"size":198,"mtime":1609427772274,"results":"61","hashOfConfig":"35"},{"size":834,"mtime":1610468634459,"results":"62","hashOfConfig":"35"},{"size":902,"mtime":1610409480258,"results":"63","hashOfConfig":"64"},{"size":1552,"mtime":1610412979267,"results":"65","hashOfConfig":"64"},{"size":2647,"mtime":1610415027842,"results":"66","hashOfConfig":"35"},{"size":2927,"mtime":1610416906481,"results":"67","hashOfConfig":"35"},{"size":4713,"mtime":1610468495185,"results":"68","hashOfConfig":"35"},{"size":2789,"mtime":1609618029464,"results":"69","hashOfConfig":"64"},{"size":4979,"mtime":1610476293406,"results":"70","hashOfConfig":"35"},{"size":1754,"mtime":1610471562473,"results":"71","hashOfConfig":"35"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m74724",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"157vljn",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bz68td",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wnccoq",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qlj0z6",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u06slr",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ktgfk3",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cnmovs",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},"ec1auk",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\App.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\hooks\\toast.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\services\\api.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Dashboard\\index.tsx",["138"],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nimport { FiClock, FiPower } from 'react-icons/fi';\n\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\nimport logoImg from '../../assets/logo.svg';\n\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Schedule,\n  NextAppointment,\n  Section,\n  Appointment,\n  Calendar\n} from './styles';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  }\n}\n\nconst Dashboard: React.FC = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  const [monthAvailability, setMonthAvailability] = useState<MonthAvailabilityItem[]>([]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n\n  // dispara quando uma ou mais função tem seu valor alterado\n  useEffect(() => {\n    api.get(`/providers/${user.id}/month-availability`, {\n      params: {\n        year: currentMonth.getFullYear(),\n        month: currentMonth.getMonth() + 1, // começa do 1\n      }\n    }).then(response => {\n      setMonthAvailability(response.data);\n    })\n  }, [currentMonth]);\n\n  //carregar os agendamentos\n  useEffect(() => {\n    api.get<Appointment[]>('/appointments/me', {\n      params: {\n        year: selectedDate.getFullYear(),\n        month: selectedDate.getMonth() + 1,\n        day: selectedDate.getDate(),\n      }\n    }).then(response => {\n      const appointmentsFormatted = response.data.map(appointment => {\n        return {\n          ...appointment,\n          hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\n        }\n      })\n\n      setAppointments(appointmentsFormatted);\n    })\n  }, [selectedDate]);\n\n  //memorizar um valor especifico e dizer quando seja recarregado\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter(monthDay => monthDay.available === false)\n      .map(monthDay => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n\n        return new Date(year, month, monthDay.day);\n      });\n\n      return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMM\", {\n      locale: ptBR\n    })\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', { locale: ptBR })\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() < 12;\n    })\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() >= 12;\n    })\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find(appointment =>\n      isAfter(parseISO(appointment.date), new Date()),\n    )\n  }, [appointments]);\n\n  const { signOut, user } = useAuth();\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Profile>\n            <img src={user.avatar_url} alt={user.name} />\n\n            <div>\n              <span>Bem-vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <Schedule>\n          <h1>Horários agendado</h1>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selectedDateAsText}</span>\n            <span>{`${selectedWeekDay}-feira`}</span>\n          </p>\n\n          {isToday(selectedDate) && nextAppointment && (\n            <NextAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment.user.avatar_url}\n                  alt={nextAppointment.user.name}\n                />\n\n                <strong>{nextAppointment.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment.hourFormatted}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n\n          <Section>\n            <strong>Manhâ</strong>\n\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste periodo</p>\n            )}\n\n            {morningAppointments.map(appointment => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img src={appointment.user.avatar_url} alt={appointment.user.name}/>\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n\n          <Section>\n            <strong>tarde</strong>\n\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste periodo</p>\n            )}\n\n            {afternoonAppointments.map(appointment => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img src={appointment.user.avatar_url} alt={appointment.user.name}/>\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n        <Calendar>\n          <DayPicker\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] }\n            }}\n            onMonthChange={handleMonthChange}\n            selectedDays={selectedDate}\n            onDayClick={handleDateChange}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abrir',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro',\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n",["139","140","141","142","143"],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignIn\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\utils\\getValidationErrors.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Button\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Button\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Tooltip\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\styles\\global.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Input\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Tooltip\\index.tsx",["144","145","146"],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\Input\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\styles.ts",[],["147","148","149","150","151"],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignIn\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\hooks\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\hooks\\auth.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignUp\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\routes\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\routes\\routes.tsx",["152"],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\ForgotPassword\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\ForgotPassword\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\ResetPassword\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Dashboard\\styles.ts",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\SignUp\\index.tsx",[],"D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Profile\\index.tsx",["153"],"import React, { ChangeEvent, useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AvatarInput } from './styles';\nimport { useAuth } from '../../hooks/auth';\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const { user, updateUser } = useAuth();\n\n  const handleSubmit = useCallback(async (data: ProfileFormData) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        old_password: Yup.string(),\n        password: Yup.string().when('old_password', {\n          is: (val: any) => !!val.length,\n          then: Yup.string().required('Campo obrigatório'),\n          otherwise: Yup.string(),\n        }),\n        password_confirmation: Yup.string()\n          .when('old_password', {\n            is: (val: any) => !!val.length,\n            then: Yup.string().required('Campo obrigatório'),\n            otherwise: Yup.string(),\n          })\n          .oneOf([Yup.ref('password'), null], 'Confirmação incorreta'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n\n      const {name, email, old_password, password, password_confirmation} = data;\n\n      const formData = {\n        name,\n        email,\n        ...(old_password\n          ? {\n              old_password,\n              password,\n              password_confirmation,\n            }\n          : {}),\n      };\n\n      const response = await api.put('/profile', formData);\n\n      updateUser(response.data);\n\n      history.push('/dashboard');\n\n      addToast({\n        type: 'success',\n        title: 'Perfil atualizado',\n        description: 'Suas informações do perfil foram atualizadas com sucesso!'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n\n        return;\n      }\n\n      // disparar um toast\n      addToast({\n        type: 'error',\n        title: 'erro na atualização',\n        description: 'Ocorreu um erro ao atualizar perfil, tente novamente.',\n      });\n    }\n  }, [addToast, history]);\n\n  // recebe um evento\n  const handleAvatarChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const data = new FormData();\n\n      data.append('avatar', e.target.files[0]);\n\n      api.patch('/users/avatar', data).then((response) => {\n        updateUser(response.data);\n\n        addToast({\n          type: 'success',\n          title: 'Avatar atualizado com sucesso',\n        });\n      })\n    }\n  }, [addToast, updateUser]);\n\n  return (\n    <Container>\n      <header>\n        <div>\n          <Link to=\"/dashboard\">\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </header>\n      <Content>\n          <Form ref={formRef}\n            initialData={{\n              name: user.name,\n              email: user.email,\n            }}\n            onSubmit={handleSubmit}\n          >\n            <AvatarInput>\n              <img src={user.avatar_url} alt={user.name} />\n              <label htmlFor=\"avatar\" >\n                <FiCamera />\n\n                <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n              </label >\n            </AvatarInput>\n\n            <h1>Meu perfil</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              containerStyle={{ marginTop: 24 }}\n              name=\"old_password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha atual\"\n            />\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Nova senha\"\n            />\n\n            <Input\n              name=\"password_confirmation\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Confirmar nova senha\"\n            />\n\n            <Button type=\"submit\">Confirmar mudanças</Button>\n          </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n","D:\\Rocketseat - Bootcamp GoStack\\GoStack - 2 Watch\\AppGoBarber\\gobaber-app\\src\\pages\\Profile\\styles.ts",[],{"ruleId":"154","severity":1,"message":"155","line":70,"column":6,"nodeType":"156","endLine":70,"endColumn":20,"suggestions":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":2,"message":"169","line":10,"column":44,"nodeType":"170","endLine":10,"endColumn":49},{"ruleId":"168","severity":2,"message":"171","line":10,"column":51,"nodeType":"170","endLine":10,"endColumn":60},{"ruleId":"168","severity":2,"message":"172","line":10,"column":62,"nodeType":"170","endLine":10,"endColumn":70},{"ruleId":"158","replacedBy":"173"},{"ruleId":"160","replacedBy":"174"},{"ruleId":"162","replacedBy":"175"},{"ruleId":"164","replacedBy":"176"},{"ruleId":"166","replacedBy":"177"},{"ruleId":"178","severity":2,"message":"179","line":37,"column":14,"nodeType":"180","fix":"181"},{"ruleId":"154","severity":1,"message":"182","line":103,"column":6,"nodeType":"156","endLine":103,"endColumn":25,"suggestions":"183"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["184"],"lines-around-directive",["185"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/prop-types","'title' is missing in props validation","Property","'className' is missing in props validation","'children' is missing in props validation",["185"],[],[],[],[],"react/jsx-closing-bracket-location","The closing bracket must be aligned with the line containing the opening tag (expected column 11 on the next line)","JSXOpeningElement",{"range":"186","text":"187"},"React Hook useCallback has a missing dependency: 'updateUser'. Either include it or remove the dependency array.",["188"],{"desc":"189","fix":"190"},"padding-line-between-statements",[840,843],"\n          />",{"desc":"191","fix":"192"},"Update the dependencies array to be: [currentMonth, user.id]",{"range":"193","text":"194"},"Update the dependencies array to be: [addToast, history, updateUser]",{"range":"195","text":"196"},[1826,1840],"[currentMonth, user.id]",[2946,2965],"[addToast, history, updateUser]"]